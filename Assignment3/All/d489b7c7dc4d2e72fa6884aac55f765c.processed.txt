   #[1]RSS 2.0 [2]RSS .92 [3]Atom 1.0

[4]How to be effective at open source: by programmers, for programmers

   Though it does not get much press, one of the great social and
   technological innovations of the last 30 years has been open source
   software. To about 90% of the population, this remains a mystery. Are
   the people producing open source code communists?

   The truth, of course, is that open source software is just another
   example of the invisible college. Whenever some occupation requires
   advanced knowledge, its practitioners tend to network and freely
   exchange. This is often done under the radar.

   This is not to say that people won't withhold information or be
   fiercely competitive. But rather that, on the whole, people will tend
   to share freely with their guild. It is not altruism: this
   collaboration is key to long-term success as individuals. In science,
   we have formalized this process: to exist as a scientist is to share
   your results regularly in the form of papers.

   Well before there was anything known as open source, programmers would
   share with other programmers. At some point, the likes of Bill Gates
   asserted their copyright over code which prevented the free exchange of
   code... but not the free exchange of ideas: if you can get a Microsoft
   engineer in a bar, and you are an established programmer, he will
   typically share internal ideas with you. In fact, as long as it cannot
   be traced to them by their employer, most programmers will freely share
   with other programmers, even if they are from competing companies.

   In this sense, open source code is just the visible part of the
   invisible college of programmers. Because open source is an expression
   of the invisible college, we have that open source code is meant to
   benefit or impress other programmers. For example, the most popular
   projects on GitHub right now is [5]Bootstrap which has as its motto:
   "by nerds, for nerds".

   And that is the key to be effective at open source. You have to be a
   programmer and you have to address yourself to other programmers.

   Starting an open source browser or word processor meant for end-users
   is not the best choice. Failure probability is high. You need many
   ressources beyond coding that are expensive. This means that you need a
   business strategy. Got an MBA? However, you can build a faster
   JavaScript engine, a better XSLT engine, and so on. These will be
   highly valued by your (programmer) peers. In effect, do not confuse
   business activities based on open source, with what open source is.
   Genuine open source is about the invisible college. It is about helping
   other programmers.

   Recently, many successful businesses are just based on a collection of
   open source tools put together quickly. And it is exactly why I started
   this post by saying that open source is a great innovation. In effect,
   no other community of practitioners has established such a rich
   invisible college. This makes programmers some of the most effective
   employees from a cost-value ratio.

   Hence, despite a sluggish recovery, software engineers enjoy a 2%
   unemployment rate and some of the best salaries an engineer can get.
   And I suspect that open source code and the free exchange of ideas
   among programmers has a lot to do with these good results.

   Of course, programmers who are not participating in this invisible
   college risk being left in the dust. If you work in isolation, never
   sharing... you will have a harder time leveraging the strength of the
   community.

   Further reading: Alexia Gaudeul, [6]Open Source Licensing in Mixed
   Markets, or Why Open Source Software Does Not Succeed, 2008. Eric S.
   Raymond, [7]The Social Context of Open-Source Software (chapter from
   the Cathedral and the Bazaar).
   [8]Tweet
   [9]Comments (8)

8 Comments

    1. That's an interesting comparison I haven't seen before.
       But the original Invisible College in Europe was motivated by the
       Scientific Revolution and a quasi-Enlightenment spirit as part of a
       shared endeavor towards understanding the universe and improving
       human affairs.
       What motivates programmers beyond quotidian problem-solving?
       Comment by [10]gwern -- 6/5/2013 @ [11]10:18
    2. @gwern
       I suspect you will find many of the same motivations with open
       source programmers. It is a shared endeavour towards making the
       world smarter, better. It is also a way to achieve a higher status
       for yourself.
       Comment by [12]Daniel Lemire -- 6/5/2013 @ [13]12:19
    3. IMHO the real innovation in open source (the modern variant, with
       Linux, gcc etc) was to get the private sector to fund it and make
       it viable. The vast majority of fulltime Linux kernel hackers are
       employed by large companies like IBM, Intel, Google and Redhat. I
       doubt major projects like the Linux kernel would see the momentum
       they have without private corporate involvement.
       That's the conundrum. These private companies are funding the
       development of a common good. They make the calculation that they
       come out ahead anyway.
       If you look way back, I think this can all be traced back to IBM in
       the 1990s. Big Blue was shit-scared that Redmond would eat
       everything under sun. It was fighting for survival. Anything that
       was anti-Microsoft was pro-IBM. In that world, things like Linux
       and Java were godsends for IBM. And indeed, IBM put its entire
       weight behind Java and Linux, and was crucial to the development
       and adoption of both in the mainstream.
       Comment by [14]Vivek Haldar -- 6/5/2013 @ [15]23:24
    4. @Vivek Haldar
       I agree that the private sector is key in keeping open source
       thriving.
       Comment by [16]Daniel Lemire -- 6/5/2013 @ [17]23:48
    5. I would like to point out a minor thing: what you are refering to
       is more `free' software than `open source'. E.g. microsoft lets you
       look into parts of their code but you must not use it ...
       The FSF makes the differences more clear:
       [18]http://www.gnu.org/philosophy/free-software-for-freedom.html
       I also like your phrase `open source code communists' ... in the US
       communists are often seen as opponents (not without a reason of
       course;)). But one could also point out the `community' part of
       `communism' which is very important to a successful open source
       project.
       Comment by [19]Peter -- 7/5/2013 @ [20]7:31
    6. @Peter
       I specifically mean "open source" which includes free software as a
       subset.
       I would say that if you get a Microsoft programmer in a bar and he
       gives you the source code for his latest algorithm on a USB key...
       that counts...
       Comment by [21]Daniel Lemire -- 7/5/2013 @ [22]7:45
    7. Interesting term indeed "invisable college": Do you think open/free
       software is an inherent by-product of practice of
       programming/development culture and community?
       Concerning "open source communists"; it is absurd; while U.S.
       government released so many scientific/infrastructure related
       source codes developed by federal funds. I don't think free
       software is anything to do with political ideals rather as Peter
       pointed out is about being a community; whether community of
       individuals or community of big cooperations.
       Comment by [23]Mehmet Suzen -- 14/5/2013 @ [24]5:24
    8. @Mehmet Suzen
       Yes, this is what I am saying: open source is a by-product of the
       community of professional programmers.
       Comment by [25]Daniel Lemire -- 14/5/2013 @ [26]8:35

   Sorry, the comment form is closed at this time.
   « « [27]Previous: P equal to NP and all that
   [28]Next: A criticism of computer science: models or modèles? » »

   [29]« Blog's main page
   Daniel Lemire's picture
     * [30]Daniel Lemire's blog
       Canadian flag Montreal, Canada
     * Google Plus logo [31]Follow on Google Plus
       22,500 followers
     * twitter logo [32]Follow @lemire
       4,000 followers
     * Facebook logo [33]Follow on Facebook
     * Google Scholar logo [34]Follow on Google Scholar
     * Subscribe to this blog
       - [35]in a reader,
       - [36]on your kindle,
       - or ____________________ Subscribe by email
     * Search through 1420 posts and 5847 comments:
       ____________________
       Search
     *
          + [37]About me
          + [38]Book recommendations
          + [39]My readers
          + [40]Terms of use
          + [41]Write good papers
     * Recent Comments:
          + Thierry Lhôte on [42]The written word took over the world
          + Thierry Lhôte on [43]The written word took over the world
          + Ben on [44]The written word took over the world
          + Anonymous on [45]The written word took over the world
          + kilian on [46]The written word took over the world
     * Some popular posts
          + [47]Why I still program
          + [48]Emotions killing your intellectual productivity
          + [49]Turn your weaknesses into strengths
          + [50]It is not where you work, but who you work with
     * [51]Home page
       [52]Google Scholar profile
       [53]arXiv
       [54]DBLP

   Powered by [55]WordPress

   © 2004-2013, [56]Daniel Lemire (lemire at gmail dot com). This work is
   licensed under a [57]Creative Commons License.

References

   Visible links
   1. http://lemire.me/blog/feed/
   2. http://lemire.me/blog/feed/rss/
   3. http://lemire.me/blog/archives/2013/05/06/how-to-be-effective-at-open-source-by-programmers-for-programmers/atom
   4. http://lemire.me/blog/archives/2013/05/06/how-to-be-effective-at-open-source-by-programmers-for-programmers/
   5. http://twitter.github.io/bootstrap/
   6. http://mpra.ub.uni-muenchen.de/19596/
   7. http://www.catb.org/esr/writings/cathedral-bazaar/cathedral-bazaar/ar01s11.html
   8. https://twitter.com/share
   9. http://lemire.me/blog/archives/2013/05/06/how-to-be-effective-at-open-source-by-programmers-for-programmers/#comments
  10. http://www.gwern.net/Google%20shutdowns
  11. http://lemire.me/blog/archives/2013/05/06/how-to-be-effective-at-open-source-by-programmers-for-programmers/?utm_source=feedburner#comment-84354
  12. http://lemire.me/en/
  13. http://lemire.me/blog/archives/2013/05/06/how-to-be-effective-at-open-source-by-programmers-for-programmers/?utm_source=feedburner#comment-84367
  14. http://blog.vivekhaldar.com/
  15. http://lemire.me/blog/archives/2013/05/06/how-to-be-effective-at-open-source-by-programmers-for-programmers/?utm_source=feedburner#comment-84402
  16. http://lemire.me/en/
  17. http://lemire.me/blog/archives/2013/05/06/how-to-be-effective-at-open-source-by-programmers-for-programmers/?utm_source=feedburner#comment-84404
  18. http://www.gnu.org/philosophy/free-software-for-freedom.html
  19. http://graphhopper.com/
  20. http://lemire.me/blog/archives/2013/05/06/how-to-be-effective-at-open-source-by-programmers-for-programmers/?utm_source=feedburner#comment-84431
  21. http://lemire.me/en/
  22. http://lemire.me/blog/archives/2013/05/06/how-to-be-effective-at-open-source-by-programmers-for-programmers/?utm_source=feedburner#comment-84432
  23. http://memosisland.blogspot.com/
  24. http://lemire.me/blog/archives/2013/05/06/how-to-be-effective-at-open-source-by-programmers-for-programmers/?utm_source=feedburner#comment-84781
  25. http://lemire.me/en/
  26. http://lemire.me/blog/archives/2013/05/06/how-to-be-effective-at-open-source-by-programmers-for-programmers/?utm_source=feedburner#comment-84794
  27. http://lemire.me/blog/archives/2013/04/26/p-equal-to-np-and-all-that/
  28. http://lemire.me/blog/archives/2013/05/17/a-criticism-of-computer-science-models-or-modeles/
  29. http://lemire.me/blog/
  30. http://lemire.me/
  31. https://plus.google.com/105888615414982242080/about
  32. http://www.twitter.com/lemire/
  33. http://www.facebook.com/daniel.lemire
  34. http://scholar.google.com/citations?sortby=pubdate&hl=en&user=q1ja-G8AAAAJ&view_op=list_works
  35. http://lemire.me/blog/feed/
  36. http://www.amazon.com/Daniel-Lemires-blog/dp/B002DPV7QQ?SubscriptionId=AKIAILSHYYTFIVPWUY6Q
  37. http://lemire.me/blog/about-me/
  38. http://lemire.me/blog/book-recommendations/
  39. http://lemire.me/blog/my-readers/
  40. http://lemire.me/blog/terms-of-use/
  41. http://lemire.me/blog/rules-to-write-a-good-research-paper/
  42. http://lemire.me/blog/archives/2013/10/01/the-written-word/#comment-95660
  43. http://lemire.me/blog/archives/2013/10/01/the-written-word/#comment-95652
  44. http://lemire.me/blog/archives/2013/10/01/the-written-word/#comment-95627
  45. http://lemire.me/blog/archives/2013/10/01/the-written-word/#comment-95596
  46. http://lemire.me/blog/archives/2013/10/01/the-written-word/#comment-95584
  47. http://lemire.me/blog/archives/2011/06/06/why-i-still-program/
  48. http://lemire.me/blog/archives/2009/01/20/emotions-killing-your-intellectual-productivity/
  49. http://lemire.me/blog/archives/2009/01/19/turn-your-weaknesses-into-strengths/
  50. http://lemire.me/blog/archives/2011/10/25/it-is-not-where-you-work-but-who-you-work-with/
  51. http://lemire.me/en/
  52. http://scholar.google.com/citations?sortby=pubdate&hl=en&user=q1ja-G8AAAAJ&view_op=list_works
  53. http://arxiv.org/a/lemire_d_1
  54. http://www.informatik.uni-trier.de/~ley/db/indices/n-tree/l/Lemire:Daniel.html
  55. http://wordpress.org/
  56. http://lemire.me/en/
  57. http://creativecommons.org/licenses/by-sa/2.0/

   Hidden links:
  58. http://lemire.me/blog/feed/
